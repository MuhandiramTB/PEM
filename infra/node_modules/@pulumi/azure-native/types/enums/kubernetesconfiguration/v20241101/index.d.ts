export declare const AKSIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
};
/**
 * The identity type.
 */
export type AKSIdentityType = (typeof AKSIdentityType)[keyof typeof AKSIdentityType];
export declare const LevelType: {
    readonly Error: "Error";
    readonly Warning: "Warning";
    readonly Information: "Information";
};
/**
 * Level of the status.
 */
export type LevelType = (typeof LevelType)[keyof typeof LevelType];
export declare const OperationType: {
    readonly Extract: "extract";
    readonly Copy: "copy";
};
/**
 * The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
 */
export type OperationType = (typeof OperationType)[keyof typeof OperationType];
export declare const ProviderType: {
    /**
     * Azure provider can be used to authenticate to Azure DevOps repositories using Managed Identity.
     */
    readonly Azure: "Azure";
    /**
     * Generic is the default provider that indicates secret-based authentication mechanism.
     */
    readonly Generic: "Generic";
};
/**
 * Name of the provider used for authentication.
 */
export type ProviderType = (typeof ProviderType)[keyof typeof ProviderType];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The identity type.
 */
export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const ScopeType: {
    readonly Cluster: "cluster";
    readonly Namespace: "namespace";
};
/**
 * Scope at which the operator will be installed.
 */
export type ScopeType = (typeof ScopeType)[keyof typeof ScopeType];
export declare const SourceKindType: {
    readonly GitRepository: "GitRepository";
    readonly Bucket: "Bucket";
    readonly AzureBlob: "AzureBlob";
    readonly OCIRepository: "OCIRepository";
};
/**
 * Source Kind to pull the configuration data from.
 */
export type SourceKindType = (typeof SourceKindType)[keyof typeof SourceKindType];
