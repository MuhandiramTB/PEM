"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGalleryInVMAccessControlProfileVersionOutput = exports.getGalleryInVMAccessControlProfileVersion = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieves information about a gallery inVMAccessControlProfile version.
 *
 * Uses Azure REST API version 2024-03-03.
 */
function getGalleryInVMAccessControlProfileVersion(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:compute:getGalleryInVMAccessControlProfileVersion", {
        "galleryName": args.galleryName,
        "inVMAccessControlProfileName": args.inVMAccessControlProfileName,
        "inVMAccessControlProfileVersionName": args.inVMAccessControlProfileVersionName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getGalleryInVMAccessControlProfileVersion = getGalleryInVMAccessControlProfileVersion;
/**
 * Retrieves information about a gallery inVMAccessControlProfile version.
 *
 * Uses Azure REST API version 2024-03-03.
 */
function getGalleryInVMAccessControlProfileVersionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:compute:getGalleryInVMAccessControlProfileVersion", {
        "galleryName": args.galleryName,
        "inVMAccessControlProfileName": args.inVMAccessControlProfileName,
        "inVMAccessControlProfileVersionName": args.inVMAccessControlProfileVersionName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getGalleryInVMAccessControlProfileVersionOutput = getGalleryInVMAccessControlProfileVersionOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0R2FsbGVyeUluVk1BY2Nlc3NDb250cm9sUHJvZmlsZVZlcnNpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9jb21wdXRlL2dldEdhbGxlcnlJblZNQWNjZXNzQ29udHJvbFByb2ZpbGVWZXJzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7OztHQUlHO0FBQ0gsU0FBZ0IseUNBQXlDLENBQUMsSUFBbUQsRUFBRSxJQUEyQjtJQUN0SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxnRUFBZ0UsRUFBRTtRQUMzRixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsOEJBQThCLEVBQUUsSUFBSSxDQUFDLDRCQUE0QjtRQUNqRSxxQ0FBcUMsRUFBRSxJQUFJLENBQUMsbUNBQW1DO1FBQy9FLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCw4RkFRQztBQThFRDs7OztHQUlHO0FBQ0gsU0FBZ0IsK0NBQStDLENBQUMsSUFBeUQsRUFBRSxJQUFpQztJQUN4SixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxnRUFBZ0UsRUFBRTtRQUNqRyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsOEJBQThCLEVBQUUsSUFBSSxDQUFDLDRCQUE0QjtRQUNqRSxxQ0FBcUMsRUFBRSxJQUFJLENBQUMsbUNBQW1DO1FBQy9FLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCwwR0FRQyJ9