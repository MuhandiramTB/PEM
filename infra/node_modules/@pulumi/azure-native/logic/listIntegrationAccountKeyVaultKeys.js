"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listIntegrationAccountKeyVaultKeysOutput = exports.listIntegrationAccountKeyVaultKeys = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets the integration account's Key Vault keys.
 *
 * Uses Azure REST API version 2019-05-01.
 */
function listIntegrationAccountKeyVaultKeys(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:logic:listIntegrationAccountKeyVaultKeys", {
        "integrationAccountName": args.integrationAccountName,
        "keyVault": args.keyVault,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
    }, opts);
}
exports.listIntegrationAccountKeyVaultKeys = listIntegrationAccountKeyVaultKeys;
/**
 * Gets the integration account's Key Vault keys.
 *
 * Uses Azure REST API version 2019-05-01.
 */
function listIntegrationAccountKeyVaultKeysOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:logic:listIntegrationAccountKeyVaultKeys", {
        "integrationAccountName": args.integrationAccountName,
        "keyVault": args.keyVault,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
    }, opts);
}
exports.listIntegrationAccountKeyVaultKeysOutput = listIntegrationAccountKeyVaultKeysOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdEludGVncmF0aW9uQWNjb3VudEtleVZhdWx0S2V5cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xvZ2ljL2xpc3RJbnRlZ3JhdGlvbkFjY291bnRLZXlWYXVsdEtleXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7O0dBSUc7QUFDSCxTQUFnQixrQ0FBa0MsQ0FBQyxJQUE0QyxFQUFFLElBQTJCO0lBQ3hILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLHVEQUF1RCxFQUFFO1FBQ2xGLHdCQUF3QixFQUFFLElBQUksQ0FBQyxzQkFBc0I7UUFDckQsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRO1FBQ3pCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO0tBQzlCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsZ0ZBUUM7QUFrQ0Q7Ozs7R0FJRztBQUNILFNBQWdCLHdDQUF3QyxDQUFDLElBQWtELEVBQUUsSUFBaUM7SUFDMUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsdURBQXVELEVBQUU7UUFDeEYsd0JBQXdCLEVBQUUsSUFBSSxDQUFDLHNCQUFzQjtRQUNyRCxVQUFVLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDekIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7S0FDOUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCw0RkFRQyJ9