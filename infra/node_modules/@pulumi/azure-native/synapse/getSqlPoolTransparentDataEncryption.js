"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSqlPoolTransparentDataEncryptionOutput = exports.getSqlPoolTransparentDataEncryption = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get a SQL pool's transparent data encryption configuration.
 *
 * Uses Azure REST API version 2021-06-01.
 *
 * Other available API versions: 2021-06-01-preview.
 */
function getSqlPoolTransparentDataEncryption(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:synapse:getSqlPoolTransparentDataEncryption", {
        "resourceGroupName": args.resourceGroupName,
        "sqlPoolName": args.sqlPoolName,
        "transparentDataEncryptionName": args.transparentDataEncryptionName,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.getSqlPoolTransparentDataEncryption = getSqlPoolTransparentDataEncryption;
/**
 * Get a SQL pool's transparent data encryption configuration.
 *
 * Uses Azure REST API version 2021-06-01.
 *
 * Other available API versions: 2021-06-01-preview.
 */
function getSqlPoolTransparentDataEncryptionOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:synapse:getSqlPoolTransparentDataEncryption", {
        "resourceGroupName": args.resourceGroupName,
        "sqlPoolName": args.sqlPoolName,
        "transparentDataEncryptionName": args.transparentDataEncryptionName,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.getSqlPoolTransparentDataEncryptionOutput = getSqlPoolTransparentDataEncryptionOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U3FsUG9vbFRyYW5zcGFyZW50RGF0YUVuY3J5cHRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zeW5hcHNlL2dldFNxbFBvb2xUcmFuc3BhcmVudERhdGFFbmNyeXB0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUUxQzs7Ozs7O0dBTUc7QUFDSCxTQUFnQixtQ0FBbUMsQ0FBQyxJQUE2QyxFQUFFLElBQTJCO0lBQzFILElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDBEQUEwRCxFQUFFO1FBQ3JGLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLCtCQUErQixFQUFFLElBQUksQ0FBQyw2QkFBNkI7UUFDbkUsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO0tBQ3RDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUkQsa0ZBUUM7QUE4Q0Q7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IseUNBQXlDLENBQUMsSUFBbUQsRUFBRSxJQUFpQztJQUM1SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQywwREFBMEQsRUFBRTtRQUMzRixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztRQUMvQiwrQkFBK0IsRUFBRSxJQUFJLENBQUMsNkJBQTZCO1FBQ25FLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYTtLQUN0QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELDhGQVFDIn0=