import * as v20241101preview from "./v20241101preview";
export { v20241101preview, };
export declare const DiscountAppliedScopeType: {
    readonly BillingAccount: "BillingAccount";
    readonly BillingProfile: "BillingProfile";
    readonly Customer: "Customer";
};
/**
 * List of applied scopes supported for discounts.
 */
export type DiscountAppliedScopeType = (typeof DiscountAppliedScopeType)[keyof typeof DiscountAppliedScopeType];
export declare const DiscountEntityType: {
    readonly Primary: "Primary";
    readonly Affiliate: "Affiliate";
};
/**
 * This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation: Required, must match one of the 2 values.
 */
export type DiscountEntityType = (typeof DiscountEntityType)[keyof typeof DiscountEntityType];
export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const SkuTier: {
    readonly Free: "Free";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
 */
export type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];
