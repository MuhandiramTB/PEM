"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listRemediationDeploymentsAtManagementGroupOutput = exports.listRemediationDeploymentsAtManagementGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets all deployments for a remediation at management group scope.
 *
 * Uses Azure REST API version 2021-10-01.
 *
 * Other available API versions: 2024-10-01.
 */
function listRemediationDeploymentsAtManagementGroup(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:policyinsights:listRemediationDeploymentsAtManagementGroup", {
        "managementGroupId": args.managementGroupId,
        "managementGroupsNamespace": args.managementGroupsNamespace,
        "remediationName": args.remediationName,
        "top": args.top,
    }, opts);
}
exports.listRemediationDeploymentsAtManagementGroup = listRemediationDeploymentsAtManagementGroup;
/**
 * Gets all deployments for a remediation at management group scope.
 *
 * Uses Azure REST API version 2021-10-01.
 *
 * Other available API versions: 2024-10-01.
 */
function listRemediationDeploymentsAtManagementGroupOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:policyinsights:listRemediationDeploymentsAtManagementGroup", {
        "managementGroupId": args.managementGroupId,
        "managementGroupsNamespace": args.managementGroupsNamespace,
        "remediationName": args.remediationName,
        "top": args.top,
    }, opts);
}
exports.listRemediationDeploymentsAtManagementGroupOutput = listRemediationDeploymentsAtManagementGroupOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdFJlbWVkaWF0aW9uRGVwbG95bWVudHNBdE1hbmFnZW1lbnRHcm91cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3BvbGljeWluc2lnaHRzL2xpc3RSZW1lZGlhdGlvbkRlcGxveW1lbnRzQXRNYW5hZ2VtZW50R3JvdXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUN0RSxpRkFBaUY7OztBQUVqRix5Q0FBeUM7QUFJekMsMENBQTBDO0FBRTFDOzs7Ozs7R0FNRztBQUNILFNBQWdCLDJDQUEyQyxDQUFDLElBQXFELEVBQUUsSUFBMkI7SUFDMUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMseUVBQXlFLEVBQUU7UUFDcEcsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQywyQkFBMkIsRUFBRSxJQUFJLENBQUMseUJBQXlCO1FBQzNELGlCQUFpQixFQUFFLElBQUksQ0FBQyxlQUFlO1FBQ3ZDLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRztLQUNsQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELGtHQVFDO0FBa0NEOzs7Ozs7R0FNRztBQUNILFNBQWdCLGlEQUFpRCxDQUFDLElBQTJELEVBQUUsSUFBaUM7SUFDNUosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMseUVBQXlFLEVBQUU7UUFDMUcsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQywyQkFBMkIsRUFBRSxJQUFJLENBQUMseUJBQXlCO1FBQzNELGlCQUFpQixFQUFFLElBQUksQ0FBQyxlQUFlO1FBQ3ZDLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRztLQUNsQixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVJELDhHQVFDIn0=