import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * Schema for App Attach Package properties.
 */
export declare class AppAttachPackage extends pulumi.CustomResource {
    /**
     * Get an existing AppAttachPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AppAttachPackage;
    /**
     * Returns true if the given object is an instance of AppAttachPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AppAttachPackage;
    /**
     * Field that can be populated with custom data and filtered on in list GET calls
     */
    readonly customData: pulumi.Output<string | undefined>;
    /**
     * Parameter indicating how the health check should behave if this package fails staging
     */
    readonly failHealthCheckOnStagingFailure: pulumi.Output<string | undefined>;
    /**
     * List of Hostpool resource Ids.
     */
    readonly hostPoolReferences: pulumi.Output<string[] | undefined>;
    /**
     * Detailed properties for App Attach Package
     */
    readonly image: pulumi.Output<outputs.desktopvirtualization.v20240808preview.AppAttachPackageInfoPropertiesResponse | undefined>;
    /**
     * URL path to certificate name located in keyVault
     */
    readonly keyVaultURL: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Lookback url to third party control plane, is null for native app attach packages
     */
    readonly packageLookbackUrl: pulumi.Output<string | undefined>;
    /**
     * Specific name of package owner, is "AppAttach" for native app attach packages
     */
    readonly packageOwnerName: pulumi.Output<string | undefined>;
    /**
     * The provisioning state of the App Attach Package.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.desktopvirtualization.v20240808preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a AppAttachPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppAttachPackageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AppAttachPackage resource.
 */
export interface AppAttachPackageArgs {
    /**
     * The name of the App Attach package
     */
    appAttachPackageName?: pulumi.Input<string>;
    /**
     * Field that can be populated with custom data and filtered on in list GET calls
     */
    customData?: pulumi.Input<string>;
    /**
     * Parameter indicating how the health check should behave if this package fails staging
     */
    failHealthCheckOnStagingFailure?: pulumi.Input<string | enums.desktopvirtualization.v20240808preview.FailHealthCheckOnStagingFailure>;
    /**
     * List of Hostpool resource Ids.
     */
    hostPoolReferences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Detailed properties for App Attach Package
     */
    image?: pulumi.Input<inputs.desktopvirtualization.v20240808preview.AppAttachPackageInfoPropertiesArgs>;
    /**
     * URL path to certificate name located in keyVault
     */
    keyVaultURL?: pulumi.Input<string>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Lookback url to third party control plane, is null for native app attach packages
     */
    packageLookbackUrl?: pulumi.Input<string>;
    /**
     * Specific name of package owner, is "AppAttach" for native app attach packages
     */
    packageOwnerName?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
