"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listClusterLanguageExtensionsOutput = exports.listClusterLanguageExtensions = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Returns a list of language extensions that can run within KQL queries.
 *
 * Uses Azure REST API version 2022-12-29.
 *
 * Other available API versions: 2022-07-07, 2023-05-02, 2023-08-15, 2024-04-13.
 */
function listClusterLanguageExtensions(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:kusto:listClusterLanguageExtensions", {
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listClusterLanguageExtensions = listClusterLanguageExtensions;
/**
 * Returns a list of language extensions that can run within KQL queries.
 *
 * Uses Azure REST API version 2022-12-29.
 *
 * Other available API versions: 2022-07-07, 2023-05-02, 2023-08-15, 2024-04-13.
 */
function listClusterLanguageExtensionsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:kusto:listClusterLanguageExtensions", {
        "clusterName": args.clusterName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.listClusterLanguageExtensionsOutput = listClusterLanguageExtensionsOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdENsdXN0ZXJMYW5ndWFnZUV4dGVuc2lvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9rdXN0by9saXN0Q2x1c3Rlckxhbmd1YWdlRXh0ZW5zaW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsNkJBQTZCLENBQUMsSUFBdUMsRUFBRSxJQUEyQjtJQUM5RyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxrREFBa0QsRUFBRTtRQUM3RSxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQU5ELHNFQU1DO0FBc0JEOzs7Ozs7R0FNRztBQUNILFNBQWdCLG1DQUFtQyxDQUFDLElBQTZDLEVBQUUsSUFBaUM7SUFDaEksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsa0RBQWtELEVBQUU7UUFDbkYsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFORCxrRkFNQyJ9