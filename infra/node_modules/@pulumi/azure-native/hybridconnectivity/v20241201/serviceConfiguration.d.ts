import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
/**
 * The service configuration details associated with the target resource.
 */
export declare class ServiceConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ServiceConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceConfiguration;
    /**
     * Returns true if the given object is an instance of ServiceConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceConfiguration;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * The port on which service is enabled.
     */
    readonly port: pulumi.Output<number | undefined>;
    /**
     * The resource provisioning state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The resource Id of the connectivity endpoint (optional).
     */
    readonly resourceId: pulumi.Output<string | undefined>;
    /**
     * Name of the service.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: pulumi.Output<outputs.hybridconnectivity.v20241201.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ServiceConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ServiceConfiguration resource.
 */
export interface ServiceConfigurationArgs {
    /**
     * The endpoint name.
     */
    endpointName: pulumi.Input<string>;
    /**
     * The port on which service is enabled.
     */
    port?: pulumi.Input<number>;
    /**
     * The resource Id of the connectivity endpoint (optional).
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The fully qualified Azure Resource manager identifier of the resource.
     */
    resourceUri: pulumi.Input<string>;
    /**
     * The service name.
     */
    serviceConfigurationName?: pulumi.Input<string>;
    /**
     * Name of the service.
     */
    serviceName: pulumi.Input<string | enums.hybridconnectivity.v20241201.ServiceName>;
}
