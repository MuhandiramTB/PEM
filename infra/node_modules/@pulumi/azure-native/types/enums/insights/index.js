"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownPrometheusForwarderDataSourceStreams = exports.KnownPerfCounterDataSourceStreams = exports.KnownLogFilesDataSourceFormat = exports.KnownLogFileTextSettingsRecordStartTimestampFormat = exports.KnownExtensionDataSourceStreams = exports.KnownDataFlowStreams = exports.KnownDataCollectionRuleResourceKind = exports.KnownDataCollectionEndpointResourceKind = exports.KnownColumnDefinitionType = exports.Kind = exports.ItemType = exports.ItemScope = exports.IngestionMode = exports.IdentityType = exports.FlowType = exports.FavoriteType = exports.DynamicThresholdSensitivity = exports.DynamicThresholdOperator = exports.DimensionOperator = exports.CriterionType = exports.ConditionOperator = exports.ComparisonOperationType = exports.ApplicationType = exports.AggregationTypeEnum = exports.AccessMode = exports.v20250101preview = exports.v20241001preview = exports.v20240101preview = exports.v20231201 = exports.v20230901preview = exports.v20230601preview = exports.v20230601 = exports.v20230315preview = exports.v20230311 = exports.v20221001 = exports.v20220801preview = exports.v20220615 = exports.v20220601 = exports.v20220401 = exports.v20210901 = exports.v20210801 = exports.v20210701preview = exports.v20210308 = exports.v20201005preview = exports.v20200501preview = exports.v20200202preview = exports.v20200202 = exports.v20180416 = exports.v20180301 = exports.v20150501 = void 0;
exports.WorkbookSharedTypeKind = exports.WebTestKind = exports.TimeAggregationType = exports.TimeAggregation = exports.ScaleType = exports.ScaleRuleMetricDimensionOperationType = exports.ScaleDirection = exports.RequestSource = exports.RecurrenceFrequency = exports.PublicNetworkAccessType = exports.PrivateEndpointServiceConnectionStatus = exports.PredictiveAutoscalePolicyScaleMode = exports.Operator = exports.OperationType = exports.Odatatype = exports.MetricStatisticType = exports.ManagedServiceIdentityType = exports.KnownWindowsEventLogDataSourceStreams = exports.KnownSyslogDataSourceStreams = exports.KnownSyslogDataSourceLogLevels = exports.KnownSyslogDataSourceFacilityNames = exports.KnownPublicNetworkAccessOptions = void 0;
// Export sub-modules:
const v20150501 = require("./v20150501");
exports.v20150501 = v20150501;
const v20180301 = require("./v20180301");
exports.v20180301 = v20180301;
const v20180416 = require("./v20180416");
exports.v20180416 = v20180416;
const v20200202 = require("./v20200202");
exports.v20200202 = v20200202;
const v20200202preview = require("./v20200202preview");
exports.v20200202preview = v20200202preview;
const v20200501preview = require("./v20200501preview");
exports.v20200501preview = v20200501preview;
const v20201005preview = require("./v20201005preview");
exports.v20201005preview = v20201005preview;
const v20210308 = require("./v20210308");
exports.v20210308 = v20210308;
const v20210701preview = require("./v20210701preview");
exports.v20210701preview = v20210701preview;
const v20210801 = require("./v20210801");
exports.v20210801 = v20210801;
const v20210901 = require("./v20210901");
exports.v20210901 = v20210901;
const v20220401 = require("./v20220401");
exports.v20220401 = v20220401;
const v20220601 = require("./v20220601");
exports.v20220601 = v20220601;
const v20220615 = require("./v20220615");
exports.v20220615 = v20220615;
const v20220801preview = require("./v20220801preview");
exports.v20220801preview = v20220801preview;
const v20221001 = require("./v20221001");
exports.v20221001 = v20221001;
const v20230311 = require("./v20230311");
exports.v20230311 = v20230311;
const v20230315preview = require("./v20230315preview");
exports.v20230315preview = v20230315preview;
const v20230601 = require("./v20230601");
exports.v20230601 = v20230601;
const v20230601preview = require("./v20230601preview");
exports.v20230601preview = v20230601preview;
const v20230901preview = require("./v20230901preview");
exports.v20230901preview = v20230901preview;
const v20231201 = require("./v20231201");
exports.v20231201 = v20231201;
const v20240101preview = require("./v20240101preview");
exports.v20240101preview = v20240101preview;
const v20241001preview = require("./v20241001preview");
exports.v20241001preview = v20241001preview;
const v20250101preview = require("./v20250101preview");
exports.v20250101preview = v20250101preview;
exports.AccessMode = {
    Open: "Open",
    PrivateOnly: "PrivateOnly",
};
exports.AggregationTypeEnum = {
    Average: "Average",
    Count: "Count",
    Minimum: "Minimum",
    Maximum: "Maximum",
    Total: "Total",
};
exports.ApplicationType = {
    Web: "web",
    Other: "other",
};
exports.ComparisonOperationType = {
    Equals: "Equals",
    NotEquals: "NotEquals",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
};
exports.ConditionOperator = {
    Equals: "Equals",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
};
exports.CriterionType = {
    StaticThresholdCriterion: "StaticThresholdCriterion",
    DynamicThresholdCriterion: "DynamicThresholdCriterion",
};
exports.DimensionOperator = {
    Include: "Include",
    Exclude: "Exclude",
};
exports.DynamicThresholdOperator = {
    GreaterThan: "GreaterThan",
    LessThan: "LessThan",
    GreaterOrLessThan: "GreaterOrLessThan",
};
exports.DynamicThresholdSensitivity = {
    Low: "Low",
    Medium: "Medium",
    High: "High",
};
exports.FavoriteType = {
    Shared: "shared",
    User: "user",
};
exports.FlowType = {
    Bluefield: "Bluefield",
};
exports.IdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    None: "None",
};
exports.IngestionMode = {
    ApplicationInsights: "ApplicationInsights",
    ApplicationInsightsWithDiagnosticSettings: "ApplicationInsightsWithDiagnosticSettings",
    LogAnalytics: "LogAnalytics",
};
exports.ItemScope = {
    Shared: "shared",
    User: "user",
};
exports.ItemType = {
    None: "none",
    Query: "query",
    Recent: "recent",
    Function: "function",
};
exports.Kind = {
    LogAlert: "LogAlert",
    LogToMetric: "LogToMetric",
};
exports.KnownColumnDefinitionType = {
    String: "string",
    Int: "int",
    Long: "long",
    Real: "real",
    Boolean: "boolean",
    Datetime: "datetime",
    Dynamic: "dynamic",
};
exports.KnownDataCollectionEndpointResourceKind = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.KnownDataCollectionRuleResourceKind = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.KnownDataFlowStreams = {
    Microsoft_Event: "Microsoft-Event",
    Microsoft_InsightsMetrics: "Microsoft-InsightsMetrics",
    Microsoft_Perf: "Microsoft-Perf",
    Microsoft_Syslog: "Microsoft-Syslog",
    Microsoft_WindowsEvent: "Microsoft-WindowsEvent",
};
exports.KnownExtensionDataSourceStreams = {
    Microsoft_Event: "Microsoft-Event",
    Microsoft_InsightsMetrics: "Microsoft-InsightsMetrics",
    Microsoft_Perf: "Microsoft-Perf",
    Microsoft_Syslog: "Microsoft-Syslog",
    Microsoft_WindowsEvent: "Microsoft-WindowsEvent",
};
exports.KnownLogFileTextSettingsRecordStartTimestampFormat = {
    ISO_8601: "ISO 8601",
    YYYY_MM_DD_HH_MM_SS: "YYYY-MM-DD HH:MM:SS",
    M_D_YYYY_HH_MM_SS_AM_PM: "M/D/YYYY HH:MM:SS AM/PM",
    Mon_DD_YYYY_HH_MM_SS: "Mon DD, YYYY HH:MM:SS",
    YyMMdd_HH_mm_ss: "yyMMdd HH:mm:ss",
    DdMMyy_HH_mm_ss: "ddMMyy HH:mm:ss",
    MMM_d_hh_mm_ss: "MMM d hh:mm:ss",
    Dd_MMM_yyyy_HH_mm_ss_zzz: "dd/MMM/yyyy:HH:mm:ss zzz",
    Yyyy_MM_ddTHH_mm_ssK: "yyyy-MM-ddTHH:mm:ssK",
};
exports.KnownLogFilesDataSourceFormat = {
    Text: "text",
};
exports.KnownPerfCounterDataSourceStreams = {
    Microsoft_Perf: "Microsoft-Perf",
    Microsoft_InsightsMetrics: "Microsoft-InsightsMetrics",
};
exports.KnownPrometheusForwarderDataSourceStreams = {
    Microsoft_PrometheusMetrics: "Microsoft-PrometheusMetrics",
};
exports.KnownPublicNetworkAccessOptions = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    SecuredByPerimeter: "SecuredByPerimeter",
};
exports.KnownSyslogDataSourceFacilityNames = {
    Alert: "alert",
    Audit: "audit",
    Auth: "auth",
    Authpriv: "authpriv",
    Clock: "clock",
    Cron: "cron",
    Daemon: "daemon",
    Ftp: "ftp",
    Kern: "kern",
    Lpr: "lpr",
    Mail: "mail",
    Mark: "mark",
    News: "news",
    Nopri: "nopri",
    Ntp: "ntp",
    Syslog: "syslog",
    User: "user",
    Uucp: "uucp",
    Local0: "local0",
    Local1: "local1",
    Local2: "local2",
    Local3: "local3",
    Local4: "local4",
    Local5: "local5",
    Local6: "local6",
    Local7: "local7",
    Asterisk: "*",
};
exports.KnownSyslogDataSourceLogLevels = {
    Debug: "Debug",
    Info: "Info",
    Notice: "Notice",
    Warning: "Warning",
    Error: "Error",
    Critical: "Critical",
    Alert: "Alert",
    Emergency: "Emergency",
    Asterisk: "*",
};
exports.KnownSyslogDataSourceStreams = {
    Microsoft_Syslog: "Microsoft-Syslog",
};
exports.KnownWindowsEventLogDataSourceStreams = {
    Microsoft_WindowsEvent: "Microsoft-WindowsEvent",
    Microsoft_Event: "Microsoft-Event",
};
exports.ManagedServiceIdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
};
exports.MetricStatisticType = {
    Average: "Average",
    Min: "Min",
    Max: "Max",
    Sum: "Sum",
    Count: "Count",
};
exports.Odatatype = {
    Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria: "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
    Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria: "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
    Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria: "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria",
};
exports.OperationType = {
    Scale: "Scale",
};
exports.Operator = {
    Equals: "Equals",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
};
exports.PredictiveAutoscalePolicyScaleMode = {
    Disabled: "Disabled",
    ForecastOnly: "ForecastOnly",
    Enabled: "Enabled",
};
exports.PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
};
exports.PublicNetworkAccessType = {
    /**
     * Enables connectivity to Application Insights through public DNS.
     */
    Enabled: "Enabled",
    /**
     * Disables public connectivity to Application Insights through public DNS.
     */
    Disabled: "Disabled",
};
exports.RecurrenceFrequency = {
    None: "None",
    Second: "Second",
    Minute: "Minute",
    Hour: "Hour",
    Day: "Day",
    Week: "Week",
    Month: "Month",
    Year: "Year",
};
exports.RequestSource = {
    Rest: "rest",
};
exports.ScaleDirection = {
    None: "None",
    Increase: "Increase",
    Decrease: "Decrease",
};
exports.ScaleRuleMetricDimensionOperationType = {
    Equals: "Equals",
    NotEquals: "NotEquals",
};
exports.ScaleType = {
    ChangeCount: "ChangeCount",
    PercentChangeCount: "PercentChangeCount",
    ExactCount: "ExactCount",
    ServiceAllowedNextValue: "ServiceAllowedNextValue",
};
exports.TimeAggregation = {
    Count: "Count",
    Average: "Average",
    Minimum: "Minimum",
    Maximum: "Maximum",
    Total: "Total",
};
exports.TimeAggregationType = {
    Average: "Average",
    Minimum: "Minimum",
    Maximum: "Maximum",
    Total: "Total",
    Count: "Count",
    Last: "Last",
};
exports.WebTestKind = {
    Ping: "ping",
    Multistep: "multistep",
    Standard: "standard",
};
exports.WorkbookSharedTypeKind = {
    Shared: "shared",
};
//# sourceMappingURL=data:application/json;base64,