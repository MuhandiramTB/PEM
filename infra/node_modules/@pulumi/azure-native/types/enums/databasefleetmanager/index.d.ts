import * as v20250201preview from "./v20250201preview";
export { v20250201preview, };
export declare const DatabaseCreateMode: {
    /**
     * Create a database.
     */
    readonly Default: "Default";
    /**
     * Copy the source database (source database name must be specified).
     */
    readonly Copy: "Copy";
    /**
     * Create a database by restoring source database from a point in time (source database name and restore from time must be specified).
     */
    readonly PointInTimeRestore: "PointInTimeRestore";
};
/**
 * Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)
 */
export type DatabaseCreateMode = (typeof DatabaseCreateMode)[keyof typeof DatabaseCreateMode];
export declare const IdentityType: {
    /**
     * No identity.
     */
    readonly None: "None";
    /**
     * User assigned identity.
     */
    readonly UserAssigned: "UserAssigned";
};
/**
 * Identity type of the main principal.
 */
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const PrincipalType: {
    /**
     * Application principal type.
     */
    readonly Application: "Application";
    /**
     * User principal type.
     */
    readonly User: "User";
};
/**
 * Principal type of the main principal.
 */
export type PrincipalType = (typeof PrincipalType)[keyof typeof PrincipalType];
export declare const ZoneRedundancy: {
    /**
     * Zone redundancy enabled.
     */
    readonly Enabled: "Enabled";
    /**
     * Zone redundancy disabled.
     */
    readonly Disabled: "Disabled";
};
/**
 * Enable zone redundancy for all databases in this tier.
 */
export type ZoneRedundancy = (typeof ZoneRedundancy)[keyof typeof ZoneRedundancy];
