"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVirtualMachineScaleSetVMRunCommandOutput = exports.getVirtualMachineScaleSetVMRunCommand = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The operation to get the VMSS VM run command.
 *
 * Uses Azure REST API version 2023-03-01.
 *
 * Other available API versions: 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01, 2024-11-01.
 */
function getVirtualMachineScaleSetVMRunCommand(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:compute:getVirtualMachineScaleSetVMRunCommand", {
        "expand": args.expand,
        "instanceId": args.instanceId,
        "resourceGroupName": args.resourceGroupName,
        "runCommandName": args.runCommandName,
        "vmScaleSetName": args.vmScaleSetName,
    }, opts);
}
exports.getVirtualMachineScaleSetVMRunCommand = getVirtualMachineScaleSetVMRunCommand;
/**
 * The operation to get the VMSS VM run command.
 *
 * Uses Azure REST API version 2023-03-01.
 *
 * Other available API versions: 2023-07-01, 2023-09-01, 2024-03-01, 2024-07-01, 2024-11-01.
 */
function getVirtualMachineScaleSetVMRunCommandOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:compute:getVirtualMachineScaleSetVMRunCommand", {
        "expand": args.expand,
        "instanceId": args.instanceId,
        "resourceGroupName": args.resourceGroupName,
        "runCommandName": args.runCommandName,
        "vmScaleSetName": args.vmScaleSetName,
    }, opts);
}
exports.getVirtualMachineScaleSetVMRunCommandOutput = getVirtualMachineScaleSetVMRunCommandOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0VmlydHVhbE1hY2hpbmVTY2FsZVNldFZNUnVuQ29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXB1dGUvZ2V0VmlydHVhbE1hY2hpbmVTY2FsZVNldFZNUnVuQ29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IscUNBQXFDLENBQUMsSUFBK0MsRUFBRSxJQUEyQjtJQUM5SCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyw0REFBNEQsRUFBRTtRQUN2RixRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07UUFDckIsWUFBWSxFQUFFLElBQUksQ0FBQyxVQUFVO1FBQzdCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWM7UUFDckMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWM7S0FDeEMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFURCxzRkFTQztBQTBHRDs7Ozs7O0dBTUc7QUFDSCxTQUFnQiwyQ0FBMkMsQ0FBQyxJQUFxRCxFQUFFLElBQWlDO0lBQ2hKLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLDREQUE0RCxFQUFFO1FBQzdGLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVU7UUFDN0IsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYztRQUNyQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYztLQUN4QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVRELGtHQVNDIn0=