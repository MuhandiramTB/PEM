export declare const ManagedServiceIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
export type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const PrivateEndpointConnectionStatus: {
    /**
     * Approved Status.
     */
    readonly Approved: "Approved";
    /**
     * Disconnected Status.
     */
    readonly Disconnected: "Disconnected";
    /**
     * Pending Status.
     */
    readonly Pending: "Pending";
    /**
     * Rejected Status.
     */
    readonly Rejected: "Rejected";
};
/**
 * Gets or sets the status.
 */
export type PrivateEndpointConnectionStatus = (typeof PrivateEndpointConnectionStatus)[keyof typeof PrivateEndpointConnectionStatus];
export declare const ReplicationVaultType: {
    /**
     * Disaster recovery vault.
     */
    readonly DisasterRecovery: "DisasterRecovery";
    /**
     * Migrate vault.
     */
    readonly Migrate: "Migrate";
};
/**
 * Gets or sets the type of vault.
 */
export type ReplicationVaultType = (typeof ReplicationVaultType)[keyof typeof ReplicationVaultType];
export declare const VMNicSelection: {
    /**
     * Not Selected.
     */
    readonly NotSelected: "NotSelected";
    /**
     * Selected by user.
     */
    readonly SelectedByUser: "SelectedByUser";
    /**
     * Default selection by ASR.
     */
    readonly SelectedByDefault: "SelectedByDefault";
    /**
     * NIC configuration overridden by user. Differs from SelectedByUser in the sense that the legacy SelectedByUser is used both for explicit modification by user and implicit approval of user if the settings are used for TFO/FO. SelectedByUserOverride implies user overriding at least one of the configurations.
     */
    readonly SelectedByUserOverride: "SelectedByUserOverride";
};
/**
 * Gets or sets the selection type of the NIC.
 */
export type VMNicSelection = (typeof VMNicSelection)[keyof typeof VMNicSelection];
