"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAzureLargeInstanceOutput = exports.getAzureLargeInstance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets an Azure Large Instance for the specified subscription, resource group,
 * and instance name.
 *
 * Uses Azure REST API version 2024-08-01-preview.
 */
function getAzureLargeInstance(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:azurelargeinstance:getAzureLargeInstance", {
        "azureLargeInstanceName": args.azureLargeInstanceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getAzureLargeInstance = getAzureLargeInstance;
/**
 * Gets an Azure Large Instance for the specified subscription, resource group,
 * and instance name.
 *
 * Uses Azure REST API version 2024-08-01-preview.
 */
function getAzureLargeInstanceOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:azurelargeinstance:getAzureLargeInstance", {
        "azureLargeInstanceName": args.azureLargeInstanceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}
exports.getAzureLargeInstanceOutput = getAzureLargeInstanceOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QXp1cmVMYXJnZUluc3RhbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vYXp1cmVsYXJnZWluc3RhbmNlL2dldEF6dXJlTGFyZ2VJbnN0YW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0VBQXNFO0FBQ3RFLGlGQUFpRjs7O0FBRWpGLHlDQUF5QztBQUl6QywwQ0FBMEM7QUFFMUM7Ozs7O0dBS0c7QUFDSCxTQUFnQixxQkFBcUIsQ0FBQyxJQUErQixFQUFFLElBQTJCO0lBQzlGLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLHVEQUF1RCxFQUFFO1FBQ2xGLHdCQUF3QixFQUFFLElBQUksQ0FBQyxzQkFBc0I7UUFDckQsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtLQUM5QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQU5ELHNEQU1DO0FBK0VEOzs7OztHQUtHO0FBQ0gsU0FBZ0IsMkJBQTJCLENBQUMsSUFBcUMsRUFBRSxJQUFpQztJQUNoSCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyx1REFBdUQsRUFBRTtRQUN4Rix3QkFBd0IsRUFBRSxJQUFJLENBQUMsc0JBQXNCO1FBQ3JELG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7S0FDOUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFORCxrRUFNQyJ9