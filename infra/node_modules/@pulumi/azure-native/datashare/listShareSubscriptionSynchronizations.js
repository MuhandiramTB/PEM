"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listShareSubscriptionSynchronizationsOutput = exports.listShareSubscriptionSynchronizations = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * List synchronizations of a share subscription
 *
 * Uses Azure REST API version 2021-08-01.
 */
function listShareSubscriptionSynchronizations(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:datashare:listShareSubscriptionSynchronizations", {
        "accountName": args.accountName,
        "filter": args.filter,
        "orderby": args.orderby,
        "resourceGroupName": args.resourceGroupName,
        "shareSubscriptionName": args.shareSubscriptionName,
        "skipToken": args.skipToken,
    }, opts);
}
exports.listShareSubscriptionSynchronizations = listShareSubscriptionSynchronizations;
/**
 * List synchronizations of a share subscription
 *
 * Uses Azure REST API version 2021-08-01.
 */
function listShareSubscriptionSynchronizationsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:datashare:listShareSubscriptionSynchronizations", {
        "accountName": args.accountName,
        "filter": args.filter,
        "orderby": args.orderby,
        "resourceGroupName": args.resourceGroupName,
        "shareSubscriptionName": args.shareSubscriptionName,
        "skipToken": args.skipToken,
    }, opts);
}
exports.listShareSubscriptionSynchronizationsOutput = listShareSubscriptionSynchronizationsOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdFNoYXJlU3Vic2NyaXB0aW9uU3luY2hyb25pemF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2RhdGFzaGFyZS9saXN0U2hhcmVTdWJzY3JpcHRpb25TeW5jaHJvbml6YXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7OztHQUlHO0FBQ0gsU0FBZ0IscUNBQXFDLENBQUMsSUFBK0MsRUFBRSxJQUEyQjtJQUM5SCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyw4REFBOEQsRUFBRTtRQUN6RixhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVc7UUFDL0IsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLFNBQVMsRUFBRSxJQUFJLENBQUMsT0FBTztRQUN2QixtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxxQkFBcUI7UUFDbkQsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTO0tBQzlCLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBVkQsc0ZBVUM7QUEwQ0Q7Ozs7R0FJRztBQUNILFNBQWdCLDJDQUEyQyxDQUFDLElBQXFELEVBQUUsSUFBaUM7SUFDaEosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsOERBQThELEVBQUU7UUFDL0YsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXO1FBQy9CLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtRQUNyQixTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU87UUFDdkIsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMscUJBQXFCO1FBQ25ELFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUztLQUM5QixFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVZELGtHQVVDIn0=