"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLinkedStorageAccountOutput = exports.getLinkedStorageAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Gets all linked storage account of a specific data source type associated with the specified workspace.
 *
 * Uses Azure REST API version 2020-08-01.
 *
 * Other available API versions: 2023-09-01, 2025-02-01.
 */
function getLinkedStorageAccount(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:operationalinsights:getLinkedStorageAccount", {
        "dataSourceType": args.dataSourceType,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.getLinkedStorageAccount = getLinkedStorageAccount;
/**
 * Gets all linked storage account of a specific data source type associated with the specified workspace.
 *
 * Uses Azure REST API version 2020-08-01.
 *
 * Other available API versions: 2023-09-01, 2025-02-01.
 */
function getLinkedStorageAccountOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:operationalinsights:getLinkedStorageAccount", {
        "dataSourceType": args.dataSourceType,
        "resourceGroupName": args.resourceGroupName,
        "workspaceName": args.workspaceName,
    }, opts);
}
exports.getLinkedStorageAccountOutput = getLinkedStorageAccountOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TGlua2VkU3RvcmFnZUFjY291bnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9vcGVyYXRpb25hbGluc2lnaHRzL2dldExpbmtlZFN0b3JhZ2VBY2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUUxQzs7Ozs7O0dBTUc7QUFDSCxTQUFnQix1QkFBdUIsQ0FBQyxJQUFpQyxFQUFFLElBQTJCO0lBQ2xHLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN6RSxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLDBEQUEwRCxFQUFFO1FBQ3JGLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjO1FBQ3JDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhO0tBQ3RDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDYixDQUFDO0FBUEQsMERBT0M7QUEwQ0Q7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsNkJBQTZCLENBQUMsSUFBdUMsRUFBRSxJQUFpQztJQUNwSCxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQywwREFBMEQsRUFBRTtRQUMzRixnQkFBZ0IsRUFBRSxJQUFJLENBQUMsY0FBYztRQUNyQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCO1FBQzNDLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYTtLQUN0QyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2IsQ0FBQztBQVBELHNFQU9DIn0=