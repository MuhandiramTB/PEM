"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.listEffectiveVirtualNetworkByNetworkGroupOutput = exports.listEffectiveVirtualNetworkByNetworkGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Lists all effective virtual networks by specified network group.
 *
 * Uses Azure REST API version 2021-02-01-preview.
 */
function listEffectiveVirtualNetworkByNetworkGroup(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:network:listEffectiveVirtualNetworkByNetworkGroup", {
        "networkGroupName": args.networkGroupName,
        "networkManagerName": args.networkManagerName,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
    }, opts);
}
exports.listEffectiveVirtualNetworkByNetworkGroup = listEffectiveVirtualNetworkByNetworkGroup;
/**
 * Lists all effective virtual networks by specified network group.
 *
 * Uses Azure REST API version 2021-02-01-preview.
 */
function listEffectiveVirtualNetworkByNetworkGroupOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:network:listEffectiveVirtualNetworkByNetworkGroup", {
        "networkGroupName": args.networkGroupName,
        "networkManagerName": args.networkManagerName,
        "resourceGroupName": args.resourceGroupName,
        "skipToken": args.skipToken,
    }, opts);
}
exports.listEffectiveVirtualNetworkByNetworkGroupOutput = listEffectiveVirtualNetworkByNetworkGroupOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdEVmZmVjdGl2ZVZpcnR1YWxOZXR3b3JrQnlOZXR3b3JrR3JvdXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9uZXR3b3JrL2xpc3RFZmZlY3RpdmVWaXJ0dWFsTmV0d29ya0J5TmV0d29ya0dyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDBDQUEwQztBQUUxQzs7OztHQUlHO0FBQ0gsU0FBZ0IseUNBQXlDLENBQUMsSUFBbUQsRUFBRSxJQUEyQjtJQUN0SSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxnRUFBZ0UsRUFBRTtRQUMzRixrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1FBQ3pDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7UUFDN0MsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7S0FDOUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCw4RkFRQztBQWtDRDs7OztHQUlHO0FBQ0gsU0FBZ0IsK0NBQStDLENBQUMsSUFBeUQsRUFBRSxJQUFpQztJQUN4SixJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekUsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxnRUFBZ0UsRUFBRTtRQUNqRyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1FBQ3pDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0I7UUFDN0MsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtRQUMzQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVM7S0FDOUIsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFSRCwwR0FRQyJ9