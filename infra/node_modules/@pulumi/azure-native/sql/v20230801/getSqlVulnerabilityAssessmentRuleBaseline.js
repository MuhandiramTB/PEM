"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSqlVulnerabilityAssessmentRuleBaselineOutput = exports.getSqlVulnerabilityAssessmentRuleBaseline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Gets a system database's sql vulnerability assessment rule baseline.
 */
function getSqlVulnerabilityAssessmentRuleBaseline(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20230801:getSqlVulnerabilityAssessmentRuleBaseline", {
        "baselineName": args.baselineName,
        "resourceGroupName": args.resourceGroupName,
        "ruleId": args.ruleId,
        "serverName": args.serverName,
        "systemDatabaseName": args.systemDatabaseName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}
exports.getSqlVulnerabilityAssessmentRuleBaseline = getSqlVulnerabilityAssessmentRuleBaseline;
/**
 * Gets a system database's sql vulnerability assessment rule baseline.
 */
function getSqlVulnerabilityAssessmentRuleBaselineOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure-native:sql/v20230801:getSqlVulnerabilityAssessmentRuleBaseline", {
        "baselineName": args.baselineName,
        "resourceGroupName": args.resourceGroupName,
        "ruleId": args.ruleId,
        "serverName": args.serverName,
        "systemDatabaseName": args.systemDatabaseName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}
exports.getSqlVulnerabilityAssessmentRuleBaselineOutput = getSqlVulnerabilityAssessmentRuleBaselineOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U3FsVnVsbmVyYWJpbGl0eUFzc2Vzc21lbnRSdWxlQmFzZWxpbmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcWwvdjIwMjMwODAxL2dldFNxbFZ1bG5lcmFiaWxpdHlBc3Nlc3NtZW50UnVsZUJhc2VsaW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzRUFBc0U7QUFDdEUsaUZBQWlGOzs7QUFFakYseUNBQXlDO0FBSXpDLDZDQUE2QztBQUU3Qzs7R0FFRztBQUNILFNBQWdCLHlDQUF5QyxDQUFDLElBQW1ELEVBQUUsSUFBMkI7SUFDdEksSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsc0VBQXNFLEVBQUU7UUFDakcsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO1FBQ2pDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVTtRQUM3QixvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1FBQzdDLDZCQUE2QixFQUFFLElBQUksQ0FBQywyQkFBMkI7S0FDbEUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFWRCw4RkFVQztBQW1ERDs7R0FFRztBQUNILFNBQWdCLCtDQUErQyxDQUFDLElBQXlELEVBQUUsSUFBaUM7SUFDeEosSUFBSSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLG9CQUFvQixFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsc0VBQXNFLEVBQUU7UUFDdkcsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZO1FBQ2pDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxpQkFBaUI7UUFDM0MsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1FBQ3JCLFlBQVksRUFBRSxJQUFJLENBQUMsVUFBVTtRQUM3QixvQkFBb0IsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1FBQzdDLDZCQUE2QixFQUFFLElBQUksQ0FBQywyQkFBMkI7S0FDbEUsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNiLENBQUM7QUFWRCwwR0FVQyJ9